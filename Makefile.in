# autoconf input (no go tool support yet)
#GOC = @GOC@
GOC = go
DEFS = @DEFS@
#LIBS = @LIBS@
#GOFLAGS = @GOFLAGS@

SHELL           = @BASH_PATH@
SED             = @SED@
TXT2MAN         = @TXT2MAN_PATH@
GZIP            = @GZIP_PATH@
INSTALL         = @INSTALL@
INSTALL_DATA    = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT  = @INSTALL_SCRIPT@

# VPATH-specific substitution variables
srcdir = @srcdir@
VPATH  = @srcdir@

# @configure_input@
# Package-specific substitution variables
package = @PACKAGE_NAME@
version = @PACKAGE_VERSION@
tarname = @PACKAGE_TARNAME@
distdir = $(tarname)-$(version)

# Test to check if archlinux [yes,no]
# Affects the installation of rc.d script
is_archlinux = @is_archlinux@

# Prefix-specific
prefix      = @prefix@
bindir      = @bindir@
exec_prefix = @exec_prefix@
mandir      = @mandir@
man1dir     = @man1dir@
sysconfdir  = @sysconfdir@
datarootdir = @datarootdir@
datadir     = @datadir@
libdir      = @libdir@

man1dir     = $(mandir)/man1/

INSTALL_SERVICE   = $(libdir)/systemd/system
INSTALL_RCD       = $(sysconfdir)/rc.d
INSTALL_CRONJOB   = $(sysconfdir)/cron.hourly
INSTALL_TMPFILESD = $(libdir)/tmpfiles.d


SRCDIR_NAME := src
SRCDIR      := $(srcdir)/$(SRCDIR_NAME)
DOCDIR      := $(srcdir)/doc

SRC_POSTFIX := .go
DOC_POSTFIX := .man.txt
MAN_POSTFIX := .1.gz
SOURCES     := $(wildcard $(SRCDIR)/*/*/*$(SRC_POSTFIX))
DOC_SOURCES := $(wildcard $(DOCDIR)/*$(DOC_POSTFIX))

# Man page targets
MANPAGES := $(DOC_SOURCES:$(DOCDIR)/%=%)
MANPAGES := $(MANPAGES:%$(DOC_POSTFIX)=%$(MAN_POSTFIX))

##############################################

ifneq ($(and $(TXT2MAN),$(GZIP)),)
    DOC_PREQ = docs
else
    $(info Man page generation skipped without txt2man or gzip)
    DOC_PREQ =
endif

##############################################

.PHONY: all
all: $(package) $(DOC_PREQ)

.PHONY: docs
docs: $(MANPAGES)

$(package): $(SOURCES)
	GOPATH=$$(readlink -f $(srcdir)):$${GOPATH} $(GOC) build $(GOFLAGS) -o $(package) $(package)/$(package)

%$(MAN_POSTFIX): $(DOCDIR)/%$(DOC_POSTFIX)
	$(TXT2MAN) $^ | $(GZIP) -9 -c > $@

conf/$(package).conf conf/$(package).cronjob Makefile: Makefile.in conf/$(package).cronjob.in conf/$(package).conf.in config.status
	./config.status $@

config.status: configure
	./config.status --recheck

#
# install/uninstall
#

.PHONY: install
install: all
	[[ ${is_archlinux} == "yes" ]] && \
		$(INSTALL) -D --mode=0755 script/$(package) "$(DESTDIR)$(INSTALL_RCD)/$(package)"
	$(INSTALL) -D --mode=0744 conf/$(package).cronjob   "$(DESTDIR)$(INSTALL_CRONJOB)/$(package)"
	# Subsitute shell variables in the cronjob file
	$(SED) -i -e 's|$${exec_prefix}|$(exec_prefix)|g' "$(DESTDIR)$(INSTALL_CRONJOB)/$(package)"
	$(INSTALL_DATA) -D conf/tmpfiles.conf "$(DESTDIR)$(INSTALL_TMPFILESD)/$(package).conf"
	mkdir -p --mode=0755 \
		"$(DESTDIR)$(INSTALL_SERVICE)" \
		"$(DESTDIR)$(bindir)" \
		"$(DESTDIR)$(sysconfdir)" \
		"$(DESTDIR)$(man1dir)"
	$(INSTALL_DATA) --target-directory="$(DESTDIR)$(INSTALL_SERVICE)" conf/$(package).service
	# Subsitute shell variables in the systemd service file
	$(SED) -i -e 's|$${exec_prefix}|$(exec_prefix)|g' "$(DESTDIR)$(INSTALL_SERVICE)/$(package).service"
	$(INSTALL) --mode=0755 --target-directory="$(DESTDIR)$(bindir)" "$(package)"
	$(INSTALL_DATA) --target-directory="$(DESTDIR)$(sysconfdir)" conf/$(package).conf
	test "$(DOC_PREQ)x" == "docsx" && \
		$(INSTALL_DATA) --target-directory="$(DESTDIR)$(man1dir)" $(MANPAGES)

.PHONY: uninstall
uninstall:
	-rm $(DESTDIR)$(bindir)/$(package)
	# TODO: add others and modify distcheck

#
# clean
#
.PHONY: maintainer-clean
maintainer-clean: clean distclean
	@#TODO?: aclocal.m4 missing
	rm -f \
		config.status \
		config.log \
		Makefile.am \
		Makefile \
		README \
		conf/$(package).cronjob \
		conf/$(package).conf \
		conf/$(package).service
	rm -rf autom4te.cache

.PHONY: clean
clean:
	rm -f $(package)
	rm -f $(package)$(MAN_POSTFIX)

.PHONY: distclean
distclean:
	rm -f $(distdir).tar.gz
	if test -d $(distdir); then rm -rf $(distdir); fi

ifneq ($(GZIP),)
#
# dist creation (requires gzip)
#
.PHONY: dist
dist: $(distdir).tar.gz

$(distdir).tar.gz: $(distdir)
	tar chof - $(distdir) | $(GZIP) -9 -c > $@
	rm -rf $(distdir)

# TODO: here
$(distdir): distclean FORCE
	mkdir -p $(distdir)
	cp $(srcdir)/configure.ac $(distdir)/
	cp $(srcdir)/configure $(distdir)/
	cp $(srcdir)/Makefile.in $(distdir)/
	cp $(srcdir)/README.in $(distdir)/
	# install-sh is created with "automake --add-missing --copy" and needed by
	# configure.
	cp $(srcdir)/install-sh $(distdir)/
	mkdir -p $(distdir)/$(SRCDIR_NAME)
	cp $(SOURCES) $(distdir)/$(SRCDIR_NAME)/
	mkdir -p $(distdir)/script
	cp $(srcdir)/script/$(package) $(distdir)/script/
	mkdir -p $(distdir)/conf
	cp $(srcdir)/conf/tmpfiles.conf $(distdir)/conf/
	cp $(srcdir)/conf/$(package).cronjob.in $(distdir)/conf/
	cp $(srcdir)/conf/$(package).service.in $(distdir)/conf/
	cp $(srcdir)/conf/$(package).conf.in $(distdir)/conf/
	mkdir -p $(distdir)/doc
	cp $(srcdir)/doc/$(package)$(DOC_POSTFIX) $(distdir)/doc/

.PHONY: distcheck
distcheck: $(distdir).tar.gz
	$(GZIP) -cd $(distdir).tar.gz | tar xvf -
	cd $(distdir) && ./configure
	cd $(distdir) && $(MAKE) all
	cd $(distdir) && $(MAKE) DESTDIR=/tmp/_temp_$(package)_inst install
	rm -rf $(distdir)
	rm -rf /tmp/_temp_$(package)_inst
endif

.PHONY: FORCE
FORCE:

